'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace DataContext
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Test")>  _
	Partial Public Class TestContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertUsuario(instance As Usuario)
    End Sub
    Partial Private Sub UpdateUsuario(instance As Usuario)
    End Sub
    Partial Private Sub DeleteUsuario(instance As Usuario)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("TestConnectionString").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Usuarios() As System.Data.Linq.Table(Of Usuario)
			Get
				Return Me.GetTable(Of Usuario)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuario")>  _
	Partial Public Class Usuario
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _id As Integer
		
		Private _nombre As String
		
		Private _paterno As String
		
		Private _materno As String
		
		Private _ingreso As System.Nullable(Of Integer)
		
		Private _genero As System.Nullable(Of Char)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OnpaternoChanging(value As String)
    End Sub
    Partial Private Sub OnpaternoChanged()
    End Sub
    Partial Private Sub OnmaternoChanging(value As String)
    End Sub
    Partial Private Sub OnmaternoChanged()
    End Sub
    Partial Private Sub OningresoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OningresoChanged()
    End Sub
    Partial Private Sub OngeneroChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OngeneroChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property id() As Integer
			Get
				Return Me._id
			End Get
			Set
				If ((Me._id = value)  _
							= false) Then
					Me.OnidChanging(value)
					Me.SendPropertyChanging
					Me._id = value
					Me.SendPropertyChanged("id")
					Me.OnidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="VarChar(15)")>  _
		Public Property nombre() As String
			Get
				Return Me._nombre
			End Get
			Set
				If (String.Equals(Me._nombre, value) = false) Then
					Me.OnnombreChanging(value)
					Me.SendPropertyChanging
					Me._nombre = value
					Me.SendPropertyChanged("nombre")
					Me.OnnombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_paterno", DbType:="VarChar(15)")>  _
		Public Property paterno() As String
			Get
				Return Me._paterno
			End Get
			Set
				If (String.Equals(Me._paterno, value) = false) Then
					Me.OnpaternoChanging(value)
					Me.SendPropertyChanging
					Me._paterno = value
					Me.SendPropertyChanged("paterno")
					Me.OnpaternoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_materno", DbType:="VarChar(15)")>  _
		Public Property materno() As String
			Get
				Return Me._materno
			End Get
			Set
				If (String.Equals(Me._materno, value) = false) Then
					Me.OnmaternoChanging(value)
					Me.SendPropertyChanging
					Me._materno = value
					Me.SendPropertyChanged("materno")
					Me.OnmaternoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ingreso", DbType:="Int")>  _
		Public Property ingreso() As System.Nullable(Of Integer)
			Get
				Return Me._ingreso
			End Get
			Set
				If (Me._ingreso.Equals(value) = false) Then
					Me.OningresoChanging(value)
					Me.SendPropertyChanging
					Me._ingreso = value
					Me.SendPropertyChanged("ingreso")
					Me.OningresoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_genero", DbType:="Char(1)")>  _
		Public Property genero() As System.Nullable(Of Char)
			Get
				Return Me._genero
			End Get
			Set
				If (Me._genero.Equals(value) = false) Then
					Me.OngeneroChanging(value)
					Me.SendPropertyChanging
					Me._genero = value
					Me.SendPropertyChanged("genero")
					Me.OngeneroChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
